/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jens
 */
public class ruleHistory extends javax.swing.JFrame {

    /**
     * Creates new form ruleHistory
     */
    DefaultTableModel model;
    public ruleHistory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date & Time", "Zone", "Source IP", "Destination IP", "Port/Service", "Policy", "Protocol", "Action", "Active"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Get History");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jButton1)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            setData();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ruleHistory.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ruleHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ruleHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ruleHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ruleHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ruleHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ruleHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void setData() throws FileNotFoundException, IOException
    {
        String user = ClientLogBean.getUser();
        ArrayList<String> listofZones = FileOpeartionNew.ReadFile("ZoneMain/ZoneMain");
        System.out.println("List of Zones ----------->"+listofZones);
        int size = listofZones.size();
        System.out.println("Size of List of Zones--------------->"+size);
        model = (DefaultTableModel) jTable1.getModel();
        int b = model.getRowCount();
        
        for(int j = b-1; j >= 0; j--)
            {
                model.removeRow(j);
            }
        for(int i = 0; i < size; i++)
        {
            String zone = listofZones.get(i);
            
            BufferedReader clAct = new BufferedReader(new InputStreamReader(new FileInputStream("/home/"+user+"/FireShark/ZoneName/"+zone+"/ClientActiveLogs.txt")));
            BufferedReader clDis = new BufferedReader(new InputStreamReader(new FileInputStream("/home/"+user+"/FireShark/ZoneName/"+zone+"/ClientDisLogs.txt")));
            String s = null;
            
            
            
            
            while ((s = clAct.readLine()) != null) 
            {
                String[] str = s.split("\t"); // Ex -> [a-zA-Z0-9][ *,\t][a-zA-Z_0-9/.]
                System.out.println(str);
                ArrayList<String> nums = new ArrayList<String>();
                System.out.println(nums);
                int a = str.length;
                System.out.println("in 1st while start");
                
                for (int j = 0; j < a; j++) 
                {
                    nums.add(str[j]);
                }
                 nums.add("Yes");
                str = nums.toArray(new String[0]);
                model.addRow(str);
                System.out.println("in 1st while end");
            }
            System.out.println("in between 2 while loop");
            while ((s = clDis.readLine()) != null) 
            {
                System.out.println("in 2nd while prestart");
                String[] str = s.split("\t"); // Ex -> [a-zA-Z0-9][ *,\t][a-zA-Z_0-9/.]
                System.out.println(str);
                ArrayList<String> nums = new ArrayList<String>();
                System.out.println(nums);
                int a = str.length;
                System.out.println("in 2nd while start");
                
                for (int j = 0; j < a; j++)
                {
                        nums.add(str[j]);
                }
                nums.add("No");
                str = nums.toArray(new String[0]);
                model.addRow(str);
                System.out.println("in 2nd while end");
            }
        }
        jTable1.setModel(model);
    }
    
    
}
